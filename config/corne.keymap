/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp RIGHT_CONTROL
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &kp CAPSLOCK
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2          &kp N3           &kp N4          &kp N5              &kp N6             &kp N7                &kp N8                 &kp N9  &kp N0  &kp BSPC
&trans   &trans  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp UP_ARROW    &kp SEMI            &kp COLON          &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
&trans   &trans  &trans          &trans           &kp DOWN_ARROW  &kp SINGLE_QUOTE    &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
                                 &trans           &trans          &trans              &kp DELETE         &mo 3                 &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans             &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET  &kp AMPS          &kp KP_MULTIPLY    &kp LPAR  &kp RPAR  &kp BSPC
&kp C_VOLUME_UP    &kp F8    &kp F10  &kp F11   &kp F12   &kp UNDERSCORE    &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans    &trans    &trans
&kp C_VOLUME_DOWN  &trans    &trans   &trans    &trans    &kp EQUAL         &kp MINUS  &kp LESS_THAN     &kp GREATER_THAN   &trans    &trans    &trans
                                      &trans    &trans    &trans            &trans     &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &none   &none   &none       &trans      &none         &none   &none       &none   &none   &none   &none
&trans          &trans  &trans  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR    &trans  &sys_reset  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans      &trans      &bt BT_CLR    &trans  &trans      &trans  &trans  &trans  &trans
                                &trans      &trans      &trans        &trans  &trans      &trans
            >;
        };
    };
};
